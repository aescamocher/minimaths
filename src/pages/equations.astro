---
import Header from '../components/Header.astro';
import '../styles/global.css';
---
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <title>MiniMaths ‚Äì Equations</title>
<meta name="description" content="Exercices interactifs corrig√©s sur les √©quations au coll√®ge." />


  </head>

  <body>
    <Header />
    <main class="container">
      <h2>Equations</h2>

      <!-- Image + l√©gende -->
      <div style="margin-bottom: 2rem;">
        <img src="/images/eqresume.jpeg" alt="R√©soudre une √©quation" style="width: 100%; border-radius: 12px;" />
        <p style="text-align: center; font-style: italic; margin-top: 0.5rem;">
          ¬´ R√©soudre une √©quation, c'est trouver la ou les valeurs de l'inconnue telle que l'√©galit√© soit vraie. ¬ª
        </p>
      </div>

      <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">1. ax = b</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">

<section class="example-corrected" data-title="Exemple corrig√©">
        <div style="text-align: center; margin-bottom: 1rem;">
          <img src="/images/eq1.jpeg" alt="Equations 1" style="max-width: 100%; border-radius: 12px;" />
        </div>

<div style="display: flex; gap: 2rem; font-family: system-ui, sans-serif; margin: 2rem 0; flex-wrap: wrap;">
  <!-- Question x = -->
  <div style="flex: 1 1 200px; display: flex; flex-direction: column; align-items: center;">
    <label for="champX" style="font-weight: 600; margin-bottom: 0.3rem;">x =</label>
    <input id="champX" placeholder="?" style="width: 70px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button id="validerX" style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
      Valider
    </button>
    <p id="feedbackX" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>

  <!-- Question y = -->
  <div style="flex: 1 1 200px; display: flex; flex-direction: column; align-items: center;">
    <label for="champY" style="font-weight: 600; margin-bottom: 0.3rem;">y =</label>
    <input id="champY" placeholder="?" style="width: 70px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button id="validerY" style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
      Valider
    </button>
    <p id="feedbackY" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>
</div>

<script>
  document.getElementById('validerX').addEventListener('click', () => {
    const val = document.getElementById('champX').value.trim().replace(',', '.');
    const feedback = document.getElementById('feedbackX');
    if (val === '') {
      feedback.textContent = 'Entre une r√©ponse.';
      feedback.style.color = '#d90429';
    } else if (val === '5.5') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });

  document.getElementById('validerY').addEventListener('click', () => {
    const val = document.getElementById('champY').value.trim().replace(',', '.');
    const feedback = document.getElementById('feedbackY');
    if (val === '') {
      feedback.textContent = 'Entre une r√©ponse.';
      feedback.style.color = '#d90429';
    } else if (val === '-2.5') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });
</script>

</section>

<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationsa1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices corrig√©s (Mathsmentales)</a></li>
        </ul>

<div id="generateurEquationsSimple" style="font-family: system-ui, sans-serif; margin: 2rem 0;">
  <button id="lancerEquationsSimple" style="background-color: #4f46e5; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; font-weight: 600; cursor: pointer;">
    üé≤ G√©n√®re tes 5 √©quations !
  </button>

  <div id="containerQuestionSimple" style="margin-top: 1.5rem;"></div>
  <div id="scoreFinalSimple" style="margin-top: 1.5rem; font-weight: bold; font-size: 1.2rem;"></div>
</div>

<script>
  function genererEquationSimple() {
    const a = Math.floor(Math.random() * 41) - 20 || 1; // entre -20 et 20, exclut 0
    const x = Math.floor(Math.random() * 21) - 10; // entre -10 et 10
    const b = a * x;
    return { a, b, x };
  }

  function afficherQuestionSimple(index, eq, score) {
    const container = document.getElementById("containerQuestionSimple");
    container.innerHTML = `
      <p><strong>√âquation ${index + 1} :</strong> ${eq.a}x = ${eq.b}</p>
      <div style="display: flex; align-items: center; gap: 1rem; margin-top: 0.8rem;">
        <span style="font-weight: bold;">x =</span>
        <div style="display: flex; flex-direction: column; align-items: center;">
          <input id="numSimple${index}" placeholder="num" style="width: 50px; text-align: center; padding: 0.2rem; border: 1.5px solid #ccc; border-radius: 6px;" />
          <hr style="width: 80%; margin: 2px 0;" />
          <input id="denSimple${index}" placeholder="den" style="width: 50px; text-align: center; padding: 0.2rem; border: 1.5px solid #ccc; border-radius: 6px;" />
        </div>
        <button id="validerSimple${index}" style="background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
          Valider
        </button>
      </div>
      <p id="feedbackSimple${index}" style="margin-top: 0.4rem; font-weight: 600;"></p>
    `;

    document.getElementById(`validerSimple${index}`).addEventListener("click", () => {
      const num = parseInt(document.getElementById(`numSimple${index}`).value.trim());
      const den = parseInt(document.getElementById(`denSimple${index}`).value.trim());
      const feedback = document.getElementById(`feedbackSimple${index}`);
      let correct = false;

      if (!isNaN(num) && !isNaN(den) && den !== 0) {
        const result = num / den;
        if (Math.abs(result - eq.x) < 0.0001) {
          feedback.textContent = "‚úÖ Bravo, bonne r√©ponse !";
          feedback.style.color = "#198754";
          correct = true;
        } else {
          feedback.textContent = "‚ùå Mauvaise r√©ponse.";
          feedback.style.color = "#d90429";
        }
      } else {
        feedback.textContent = "‚ö†Ô∏è Fraction invalide.";
        feedback.style.color = "#f59e0b";
        return;
      }

      setTimeout(() => poserQuestionSimple(index + 1, correct ? score + 1 : score), 1000);
    });
  }

  function poserQuestionSimple(index, score) {
    if (index >= 5) {
      const final = document.getElementById("scoreFinalSimple");
      let message = "", color = "";
      if (score <= 2) {
        message = "üòì √Ä revoir !";
        color = "#dc2626";
      } else if (score <= 4) {
        message = "üôÇ Bien jou√©, encore un effort !";
        color = "#f59e0b";
      } else {
        message = "üèÜ F√©licitations !";
        color = "#16a34a";
      }
      final.innerHTML = `<span style="color:${color};">${message} Score : ${score}/5</span>`;
      return;
    }

    const eq = genererEquationSimple();
    afficherQuestionSimple(index, eq, score);
  }

  document.getElementById("lancerEquationsSimple").addEventListener("click", () => {
    document.getElementById("scoreFinalSimple").innerHTML = "";
    poserQuestionSimple(0, 0);
  });
</script>



</section>
</div>

            <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">2. a+x = b</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">

<section class="example-corrected" data-title="Exemple corrig√©">
        <div style="text-align: center; margin-bottom: 1rem;">
          <img src="/images/eq2.jpeg" alt="Equations 2" style="max-width: 100%; border-radius: 12px;" />
        </div>   
<div style="display: flex; gap: 2rem; font-family: system-ui, sans-serif; margin: 2rem 0; flex-wrap: wrap;">
  <!-- Question gauche -->
  <div style="flex: 1 1 200px; display: flex; flex-direction: column; align-items: center;">
    <label for="champGauche2" style="font-weight: 600; margin-bottom: 0.3rem;">x =</label>
    <input id="champGauche2" placeholder="?" style="width: 70px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button id="validerGauche2" style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
      Valider
    </button>
    <p id="feedbackGauche2" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>

  <!-- Question droite -->
  <div style="flex: 1 1 200px; display: flex; flex-direction: column; align-items: center;">
    <label for="champDroite2" style="font-weight: 600; margin-bottom: 0.3rem;">y =</label>
    <input id="champDroite2" placeholder="?" style="width: 70px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button id="validerDroite2" style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
      Valider
    </button>
    <p id="feedbackDroite2" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>
</div>

<script>
  document.getElementById('validerGauche2').addEventListener('click', () => {
    const val = document.getElementById('champGauche2').value.trim();
    const feedback = document.getElementById('feedbackGauche2');
    if (val === '') {
      feedback.textContent = 'Entre une r√©ponse.';
      feedback.style.color = '#d90429';
    } else if (val === '-16') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });

  document.getElementById('validerDroite2').addEventListener('click', () => {
    const val = document.getElementById('champDroite2').value.trim();
    const feedback = document.getElementById('feedbackDroite2');
    if (val === '') {
      feedback.textContent = 'Entre une r√©ponse.';
      feedback.style.color = '#d90429';
    } else if (val === '25') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });
</script>

  

</section>
<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationsb1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices corrig√©s (Mathsmentales)</a></li>
        </ul>

<div id="generateurEquationsAdd" style="font-family: system-ui, sans-serif; margin: 2rem 0;">
  <button id="lancerEquationsAdd" style="background-color: #4f46e5; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; font-weight: 600; cursor: pointer;">
    üé≤ G√©n√®re tes 5 √©quations !
  </button>

  <div id="containerQuestionAdd" style="margin-top: 1.5rem;"></div>
  <div id="scoreFinalAdd" style="margin-top: 1.5rem; font-weight: bold; font-size: 1.2rem;"></div>
</div>

<script>
  const eqAddContainer = document.getElementById("containerQuestionAdd");
  const scoreFinalAdd = document.getElementById("scoreFinalAdd");
  let questionsAdd = [];
  let scoreAdd = 0;
  let indexAdd = 0;

  function genererEquationAdd() {
    const x = Math.floor(Math.random() * 41) - 20;
    const a = Math.floor(Math.random() * 41) - 20;
    const b = a + x;
    const ordre = Math.random() < 0.5; // true: a + x = b ; false: x + a = b
    return { a, b, x, ordre };
  }

function afficherQuestionAdd(index, eq) {
  const eqTexte = eq.ordre ? `${eq.a} + x = ${eq.b}` : `x + ${eq.a} = ${eq.b}`;
  eqAddContainer.innerHTML = `
    <p><strong>√âquation ${index + 1} :</strong> ${eqTexte}</p>
    <div style="display: flex; align-items: center; gap: 0.5rem; margin-top: 0.5rem;">
      <label for="repAdd" style="font-weight: 600;">x =</label>
      <input id="repAdd" type="text" style="width: 60px; padding: 0.3rem; text-align: center; border: 1.5px solid #ccc; border-radius: 6px;" placeholder="?" />
      <button id="validerAddBtn" style="background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; font-weight: 600; cursor: pointer;">Valider</button>
    </div>
    <p id="feedbackAdd" style="margin-top: 0.5rem; font-weight: 600;"></p>
  `;

  document.getElementById("validerAddBtn").addEventListener("click", verifierAdd);
}


  function verifierAdd() {
    const input = document.getElementById("repAdd").value.trim();
    const feedback = document.getElementById("feedbackAdd");
    const attendu = questionsAdd[indexAdd].x.toString();

    if (input === attendu) {
      feedback.textContent = "‚úÖ Bonne r√©ponse !";
      feedback.style.color = "#198754";
      scoreAdd++;
    } else {
      feedback.textContent = `‚ùå Mauvaise r√©ponse (r√©p attendue : ${attendu})`;
      feedback.style.color = "#dc2626";
    }

    indexAdd++;
    setTimeout(() => {
      if (indexAdd < questionsAdd.length) {
        afficherQuestionAdd(indexAdd, questionsAdd[indexAdd]);
      } else {
        afficherScoreFinalAdd();
      }
    }, 1000);
  }

  function afficherScoreFinalAdd() {
    eqAddContainer.innerHTML = "";
    let message = "";
    let color = "";

    if (scoreAdd <= 2) {
      message = "üòï √Ä revoir, tu peux y arriver !";
      color = "#ef4444";
    } else if (scoreAdd <= 4) {
      message = "üôÇ Bien jou√©, encore un effort !";
      color = "#f59e0b";
    } else {
      message = "üèÜ F√©licitations !";
      color = "#10b981";
    }

    scoreFinalAdd.innerHTML = `Score : ${scoreAdd}/5 <br><span style="color:${color}">${message}</span>`;
  }

  document.getElementById("lancerEquationsAdd").addEventListener("click", () => {
    scoreAdd = 0;
    indexAdd = 0;
    scoreFinalAdd.innerHTML = "";
    questionsAdd = Array.from({ length: 5 }, genererEquationAdd);
    afficherQuestionAdd(indexAdd, questionsAdd[indexAdd]);
  });
</script>


</section>
</div>

            <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">3. ax+b = cx+d</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">
      
<section class="example-corrected" data-title="Exemple corrig√©">
       <div style="text-align: center; margin-bottom: 1rem;">
          <img src="/images/eq3.jpeg" alt="Equations 3" style="max-width: 100%; border-radius: 12px;" />
        </div> 

<div style="display: flex; align-items: flex-start; gap: 2rem; font-family: system-ui, sans-serif; margin: 2rem 0;">
  <!-- x = -->
  <p style="font-weight: bold; margin-top: 1.1rem;">x =&nbsp;</p>

  <!-- Groupe gauche : 5 / 3 -->
  <div style="display: flex; flex-direction: column; align-items: center;">
    <input id="champFracG1" placeholder="?" style="width: 50px; text-align: center; margin-bottom: 0.3rem; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <input id="champFracG2" placeholder="?" style="width: 50px; text-align: center; margin-top: 0.3rem; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button
      id="validerFracG"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackFracG" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>

  <!-- y = -->
  <p style="font-weight: bold; margin-top: 1.1rem;">y =&nbsp;</p>

  <!-- Groupe droite : -3 / 2 -->
  <div style="display: flex; flex-direction: column; align-items: center;">
    <input id="champFracD1" placeholder="?" style="width: 50px; text-align: center; margin-bottom: 0.3rem; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <input id="champFracD2" placeholder="?" style="width: 50px; text-align: center; margin-top: 0.3rem; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    <button
      id="validerFracD"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackFracD" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>
</div>

<script>
  // x = 5 / 3
  document.getElementById('validerFracG').addEventListener('click', () => {
    const num = document.getElementById('champFracG1').value.trim();
    const den = document.getElementById('champFracG2').value.trim();
    const feedback = document.getElementById('feedbackFracG');
    if (num === '5' && den === '3') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });

  // y = -3 / 2
  document.getElementById('validerFracD').addEventListener('click', () => {
    const num = document.getElementById('champFracD1').value.trim();
    const den = document.getElementById('champFracD2').value.trim();
    const feedback = document.getElementById('feedbackFracD');
    if (num === '-3' && den === '2') {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });
</script>

    

</section>
<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationsc1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices corrig√©s (Mathsmentales)</a></li>
        </ul>

<div id="eqFracsStepByStep" style="font-family: system-ui, sans-serif; margin: 2rem 0;">
  <button id="startEqFracsStep" style="background-color: #4f46e5; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; font-weight: 600; cursor: pointer;">
    üé≤ G√©n√®re tes 5 √©quations !
  </button>
  <div id="zoneEqStep" style="margin-top: 1rem;"></div>
  <p id="scoreEqStep" style="font-weight: 600; margin-top: 1rem;"></p>
</div>

<script>
function simplifierFraction(n, d) {
  function pgcd(a, b) {
    return b === 0 ? a : pgcd(b, a % b);
  }
  const signe = Math.sign(n) * Math.sign(d);
  n = Math.abs(n);
  d = Math.abs(d);
  const facteur = pgcd(n, d);
  return [signe * n / facteur, d / facteur];
}

function genererEquationAxBxCxDx() {
  let a, b, c, d;
  do {
    a = Math.floor(Math.random() * 21) - 10 || 1;
    b = Math.floor(Math.random() * 21) - 10;
    c = Math.floor(Math.random() * 21) - 10 || -1;
    d = Math.floor(Math.random() * 21) - 10;
  } while (a === c);
  const num = d - b;
  const den = a - c;
  const [nSimp, dSimp] = simplifierFraction(num, den);
  return { a, b, c, d, num: nSimp, den: dSimp };
}

let eqStepList = [];
let eqIndex = 0;
let eqScore = 0;

function afficherEquationEtChamp(eq, index) {
  const container = document.getElementById("zoneEqStep");
  container.innerHTML = `
    <p><strong>√âquation ${index + 1} :</strong> ${eq.a}x ${eq.b < 0 ? "- " + (-eq.b) : "+ " + eq.b} = ${eq.c}x ${eq.d < 0 ? "- " + (-eq.d) : "+ " + eq.d}</p>
    <div style="display: flex; align-items: center; gap: 0.5rem;">
      <label style="font-weight: 600;">x =</label>
      <div style="display: flex; flex-direction: column; align-items: center;">
        <input id="numStep" type="text" placeholder="num" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
        <input id="denStep" type="text" placeholder="den" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px; margin-top: 0.2rem;" />
      </div>
      <button id="validerStep" style="background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
        Valider
      </button>
    </div>
    <p id="feedbackStep" style="margin-top: 0.5rem; font-weight: 600; min-height: 1.2em;"></p>
  `;

  document.getElementById("validerStep").addEventListener("click", () => {
    const n = parseInt(document.getElementById("numStep").value.trim());
    const d = parseInt(document.getElementById("denStep").value.trim());
    const feedback = document.getElementById("feedbackStep");

    if (n * eq.den === d * eq.num) {
      feedback.textContent = "‚úÖ Bonne r√©ponse !";
      feedback.style.color = "#198754";
      eqScore++;
    } else {
      feedback.textContent = "‚ùå Mauvaise r√©ponse.";
      feedback.style.color = "#dc2626";
    }

    setTimeout(() => {
      eqIndex++;
      if (eqIndex < 5) {
        afficherEquationEtChamp(eqStepList[eqIndex], eqIndex);
      } else {
        const scoreFinal = document.getElementById("scoreEqStep");
        if (eqScore === 5) {
          scoreFinal.textContent = "üèÜ F√©licitations, 5/5 ! Tu ma√Ætrises les √©quations.";
          scoreFinal.style.color = "#198754";
        } else if (eqScore >= 3) {
          scoreFinal.textContent = `üëç Tu as ${eqScore}/5. C‚Äôest pas mal, mais √† revoir un peu.`;
          scoreFinal.style.color = "#eab308";
        } else {
          scoreFinal.textContent = `‚ùå Seulement ${eqScore}/5. Reprends les bases et r√©essaie !`;
          scoreFinal.style.color = "#dc2626";
        }
      }
    }, 800);
  });
}

document.getElementById("startEqFracsStep").addEventListener("click", () => {
  eqStepList = [];
  for (let i = 0; i < 5; i++) eqStepList.push(genererEquationAxBxCxDx());
  eqIndex = 0;
  eqScore = 0;
  document.getElementById("scoreEqStep").textContent = "";
  afficherEquationEtChamp(eqStepList[0], 0);
});
</script>



</section>
</div>

            <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">4. x¬≤ = a</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">
     
<section class="example-corrected" data-title="Exemple corrig√©">
       <div style="text-align: center; margin-bottom: 1rem;">
          <img src="/images/eq4.jpeg" alt="Equations 4" style="max-width: 100%; border-radius: 12px;" />
        </div>   

<div style="display: flex; gap: 2rem; font-family: system-ui, sans-serif; margin: 2rem 0; align-items: flex-start;">
  <!-- Groupe X -->
  <div>
    <div style="display: flex; gap: 0.5rem; align-items: center;">
      <label for="champX1_4">x =</label>
      <input id="champX1_4" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <label for="champX2_4">x =</label>
      <input id="champX2_4" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    </div>
    <button
      id="validerX4"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 1rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackX4" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>

  <!-- Groupe Y -->
  <div>
    <div style="display: flex; gap: 0.5rem; align-items: center;">
      <label for="champY1_4">y =</label>
      <input id="champY1_4" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <label for="champY2_4">y =</label>
      <input id="champY2_4" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    </div>
    <button
      id="validerY4"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 1rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackY4" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>
</div>

<script>
  window.onload = () => {
    document.getElementById('validerX4').addEventListener('click', () => {
      const x1 = document.getElementById('champX1_4').value.trim();
      const x2 = document.getElementById('champX2_4').value.trim();
      const feedback = document.getElementById('feedbackX4');
      const values = [x1, x2];
      if (values.includes('13') && values.includes('-13')) {
        feedback.textContent = '‚úÖ Bravo !';
        feedback.style.color = '#198754';
      } else {
        feedback.textContent = '‚ùå Mauvaise r√©ponse.';
        feedback.style.color = '#d90429';
      }
    });

    document.getElementById('validerY4').addEventListener('click', () => {
      const y1 = document.getElementById('champY1_4').value.trim();
      const y2 = document.getElementById('champY2_4').value.trim();
      const feedback = document.getElementById('feedbackY4');
      const values = [y1, y2];
      if (values.includes('11') && values.includes('-11')) {
        feedback.textContent = '‚úÖ Bravo !';
        feedback.style.color = '#198754';
      } else {
        feedback.textContent = '‚ùå Mauvaise r√©ponse.';
        feedback.style.color = '#d90429';
      }
    });
  };
</script>


  

</section>
<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationsd1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices corrig√©s (Mathsmentales)</a></li>
        </ul>

<div id="blocEqCarres" style="font-family: system-ui, sans-serif; margin: 2rem 0;">
  <button id="btnCarres" style="background-color: #4f46e5; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; font-weight: 600; cursor: pointer;">
    üé≤ G√©n√®re tes 5 √©quations !
  </button>
  <div id="zoneEqCarres" style="margin-top: 1rem;"></div>
  <p id="scoreCarres" style="font-weight: 600; margin-top: 1rem;"></p>
</div>

<script>
function genererEquationCarree() {
  const racine = Math.floor(Math.random() * 10) + 2;
  const carre = racine * racine;
  const type = Math.floor(Math.random() * 3); // 0: x¬≤=n, 1: x¬≤-a=b, 2: x¬≤+a=b
  let texte, solution;
  if (type === 0) {
    texte = `x¬≤ = ${carre}`;
    solution = [racine, -racine];
  } else {
    const a = Math.floor(Math.random() * 11);
    if (type === 1) {
      texte = `x¬≤ - ${a} = ${carre - a}`;
    } else {
      texte = `x¬≤ + ${a} = ${carre + a}`;
    }
    solution = [racine, -racine];
  }
  return { texte, solution };
}

let listeCarres = [];
let indexCarre = 0;
let scoreCarre = 0;

function afficherEquationCarree(eq, index) {
  const container = document.getElementById("zoneEqCarres");
  container.innerHTML = `
    <p><strong>√âquation ${index + 1} :</strong> ${eq.texte}</p>
    <div style="display: flex; align-items: center; gap: 0.5rem;">
      <label style="font-weight: 600;">x =</label>
      <input id="rep1Carre" type="text" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <input id="rep2Carre" type="text" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <button id="validerCarre" style="background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
        Valider
      </button>
    </div>
    <p id="feedbackCarre" style="margin-top: 0.5rem; font-weight: 600; min-height: 1.2em;"></p>
  `;

  document.getElementById("validerCarre").addEventListener("click", () => {
    const r1 = parseInt(document.getElementById("rep1Carre").value.trim());
    const r2 = parseInt(document.getElementById("rep2Carre").value.trim());
    const feedback = document.getElementById("feedbackCarre");

    const sol = eq.solution;
    const correct =
      (r1 === sol[0] && r2 === sol[1]) || (r1 === sol[1] && r2 === sol[0]);

    if (correct) {
      feedback.textContent = "‚úÖ Bonne r√©ponse !";
      feedback.style.color = "#198754";
      scoreCarre++;
    } else {
      feedback.textContent = `‚ùå Mauvaise r√©ponse.`;
      feedback.style.color = "#dc2626";
    }

    setTimeout(() => {
      indexCarre++;
      if (indexCarre < 5) {
        afficherEquationCarree(listeCarres[indexCarre], indexCarre);
      } else {
        const result = document.getElementById("scoreCarres");
        if (scoreCarre === 5) {
          result.textContent = "üèÜ Bravo ! 5/5 c‚Äôest parfait !";
          result.style.color = "#198754";
        } else if (scoreCarre >= 3) {
          result.textContent = `üü° ${scoreCarre}/5. Encore un effort !`;
          result.style.color = "#eab308";
        } else {
          result.textContent = `‚ùå Seulement ${scoreCarre}/5. Revois tes carr√©s parfaits !`;
          result.style.color = "#dc2626";
        }
      }
    }, 700);
  });
}

document.getElementById("btnCarres").addEventListener("click", () => {
  listeCarres = [];
  for (let i = 0; i < 5; i++) listeCarres.push(genererEquationCarree());
  indexCarre = 0;
  scoreCarre = 0;
  document.getElementById("scoreCarres").textContent = "";
  afficherEquationCarree(listeCarres[0], 0);
});
</script>


</section>
</div>

            <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">5. Produit nul</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">

<section class="example-corrected" data-title="Exemple corrig√©">
       <div style="text-align: center; margin-bottom: 1rem;">
          <img src="/images/eq5.jpeg" alt="Equations 5" style="max-width: 100%; border-radius: 12px;" />
        </div>  

<div style="display: flex; gap: 2rem; font-family: system-ui, sans-serif; margin: 2rem 0; align-items: flex-start;">
  <!-- Groupe X -->
  <div>
    <div style="display: flex; gap: 0.5rem; align-items: center;">
      <label for="champX355">x =</label>
      <input id="champX355" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <label for="champX455">x =</label>
      <input id="champX455" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    </div>
    <button
      id="validerX355"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 1rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackX355" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>

  <!-- Groupe Y -->
  <div>
    <div style="display: flex; gap: 0.5rem; align-items: center;">
      <label for="champY355">y =</label>
      <input id="champY355" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
      <label for="champY455">y =</label>
      <input id="champY455" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
    </div>
    <button
      id="validerY355"
      style="margin-top: 0.5rem; background-color: #4f46e5; color: white; border: none; padding: 0.3rem 1rem; border-radius: 6px; cursor: pointer; font-weight: 600;"
    >
      Valider
    </button>
    <p id="feedbackY355" style="margin-top: 0.3rem; font-weight: 600; min-height: 1.2em;"></p>
  </div>
</div>

<script>
  function normalize(value) {
    return value.replace(',', '.');
  }

  document.getElementById('validerX355').addEventListener('click', () => {
    const x1 = normalize(document.getElementById('champX355').value.trim());
    const x2 = normalize(document.getElementById('champX455').value.trim());
    const feedback = document.getElementById('feedbackX355');
    const values = [x1, x2];
    if (values.includes('3') && values.includes('-7')) {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });

  document.getElementById('validerY355').addEventListener('click', () => {
    const y1 = normalize(document.getElementById('champY355').value.trim());
    const y2 = normalize(document.getElementById('champY455').value.trim());
    const feedback = document.getElementById('feedbackY355');
    const values = [y1, y2];
    if (values.includes('0.4') && values.includes('9')) {
      feedback.textContent = '‚úÖ Bravo !';
      feedback.style.color = '#198754';
    } else {
      feedback.textContent = '‚ùå Mauvaise r√©ponse.';
      feedback.style.color = '#d90429';
    }
  });
</script>






</section>
<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationse1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices corrig√©s (Mathsmentales)</a></li>
        </ul>

<div id="blocProduitNul" style="font-family: system-ui, sans-serif; margin: 2rem 0;">
  <button id="btnProduitNul" style="background-color: #4f46e5; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; font-weight: 600; cursor: pointer;">
    üé≤ G√©n√®re tes 5 √©quations !
  </button>
  <div id="zoneProduitNul" style="margin-top: 1rem;"></div>
  <p id="scoreProduitNul" style="font-weight: 600; margin-top: 1rem;"></p>
</div>

<script>
(function(){
  // G√©n√®re une √©quation produit nul (x - a)(x - b) = 0 avec a ‚â† b
  function genererProduitNul() {
    const a = Math.floor(Math.random() * 11) - 5; // [-5,5]
    const b = Math.floor(Math.random() * 11) - 5;
    if (a === b) return genererProduitNul(); // √©viter racines identiques
    const affA = a < 0 ? `x + ${-a}` : `x - ${a}`;
    const affB = b < 0 ? `x + ${-b}` : `x - ${b}`;
    const texte = `(${affA})(${affB}) = 0`;
    return {
      texte,
      racines: [a, b],
    };
  }

  let listeProduit = [];
  let indexProduit = 0;
  let scoreProduit = 0;

  function afficherProduitNul(eq, index) {
    const cont = document.getElementById("zoneProduitNul");
    cont.innerHTML = `
      <p><strong>√âquation ${index + 1} :</strong> ${eq.texte}</p>
      <div style="display: flex; align-items: center; gap: 0.5rem; margin-top: 0.5rem;">
        <label style="font-weight: 600;">x =</label>
        <input id="rep1Produit" type="text" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
        <input id="rep2Produit" type="text" placeholder="?" style="width: 50px; text-align: center; padding: 0.3rem; border: 1.5px solid #ccc; border-radius: 6px;" />
        <button id="validerProduit" style="background-color: #4f46e5; color: white; border: none; padding: 0.3rem 0.8rem; border-radius: 6px; cursor: pointer; font-weight: 600;">
          Valider
        </button>
      </div>
      <p id="feedbackProduit" style="margin-top: 0.5rem; font-weight: 600; min-height: 1.2em;"></p>
    `;

    document.getElementById("validerProduit").addEventListener("click", () => {
      const r1 = parseInt(document.getElementById("rep1Produit").value.trim());
      const r2 = parseInt(document.getElementById("rep2Produit").value.trim());
      const fb = document.getElementById("feedbackProduit");

      const correct =
        (r1 === eq.racines[0] && r2 === eq.racines[1]) ||
        (r1 === eq.racines[1] && r2 === eq.racines[0]);

      if (correct) {
        fb.textContent = "‚úÖ Bien jou√© !";
        fb.style.color = "#198754";
        scoreProduit++;
      } else {
        fb.textContent = "‚ùå Mauvaise r√©ponse.";
        fb.style.color = "#dc2626";
      }

      setTimeout(() => {
        indexProduit++;
        if (indexProduit < 5) {
          afficherProduitNul(listeProduit[indexProduit], indexProduit);
        } else {
          const resultat = document.getElementById("scoreProduitNul");
          if (scoreProduit === 5) {
            resultat.textContent = "üéØ Parfait ! 5/5 !";
            resultat.style.color = "#198754";
          } else if (scoreProduit >= 3) {
            resultat.textContent = `üü° ${scoreProduit}/5. Tu y es presque !`;
            resultat.style.color = "#eab308";
          } else {
            resultat.textContent = `‚ùå ${scoreProduit}/5. √Ä retravailler.`;
            resultat.style.color = "#dc2626";
          }
          // Vide la zone d'√©quation et feedback
          document.getElementById("zoneProduitNul").innerHTML = "";
        }
      }, 700);
    });
  }

  document.getElementById("btnProduitNul").addEventListener("click", () => {
    listeProduit = [];
    for (let i = 0; i < 5; i++) listeProduit.push(genererProduitNul());
    indexProduit = 0;
    scoreProduit = 0;
    document.getElementById("scoreProduitNul").textContent = "";
    afficherProduitNul(listeProduit[0], 0);
  });
})();
</script>


</section>



</div>

            <h3 class="section-title">
        <span class="arrow"></span>
        <span class="title-text">6. Objectif brevet</span>
        <span class="cta">Cliquez pour ouvrir ‚ñº</span>
      </h3>
      <div class="collapsible-section">

<section class="example-corrected" data-title="QCM BILAN">
      <div class="video">
        <iframe width="100%" height="215"
          src="https://www.youtube.com/embed/oo0O361ti2E"
          title="QCM Fractions"
          frameborder="0"
          allowfullscreen>
        </iframe>
      </div>
</section>
<section class="training-links" data-title="Pour s‚Äôentra√Æner">
        <ul class="link-buttons">
          <li><a href="/docs/equationsf1.pdf" target="_blank" class="pdf-button">üìÑ Fiche d'exercices vari√©s (S√©samaths)</a></li>
          <li><a href="/docs/equationsf2.pdf" target="_blank" class="pdf-button">üìò Probl√®mes vari√©s (S√©samaths)</a></li>
        </ul>
</section>

</div>

      <a href="/" class="btn">üè† Retour √† l‚Äôaccueil</a>
    </main>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const titles = document.querySelectorAll('.collapsible-title, .section-title');
        titles.forEach(title => {
          const next = title.nextElementSibling;
          if (next && next.classList.contains('collapsible-section')) {
            title.addEventListener('click', () => {
              const isOpen = title.classList.toggle('open');
              next.classList.toggle('open', isOpen);
            });
          }
        });
      });
    </script>
  </body>
</html>
